# Colored manpages
# --------------------------------------------------------------------
man() {
  env LESS_TERMCAP_mb=$'\E[01;31m' \
  LESS_TERMCAP_md=$'\E[01;31m' \
  LESS_TERMCAP_me=$'\E[0m' \
  LESS_TERMCAP_se=$'\E[0m' \
  LESS_TERMCAP_so=$'\E[01;44;33m' \
  LESS_TERMCAP_ue=$'\E[0m' \
  LESS_TERMCAP_us=$'\E[01;32m' \
  man "$@"
}


# mv & rm
# --------------------------------------------------------------------
# git mv when in repo, \mv elsewhere
mv() {
  if git rev-parse --is-inside-work-tree > /dev/null 2>&1 ; then
    git mv -v "$@" 2> /dev/null || $(which mv) -iv "$@"
  else
    $(which mv) -iv "$@"
  fi
}

# git rm when in repo, \rm elsewhere
# also tar a back-up and put it in /tmp
rm() {
  ARGS="$@"
  # backup
  while [ ! $# -eq 0 ]                            # while there are arguments
  do
    if [[ $1 != "-"* ]] ; then                    # if not an inline argument
      BACKUP_FILE_NAME="${1%/}.tar.bz2"           # create back-up file-name (breaks for dirs)
      if [ -f $BACKUP_FILE_NAME ]; then           # if the file exists
        tar -jcf $BACKUP_FILE_NAME $1             # tar
        mv -f $BACKUP_FILE_NAME /tmp > /dev/null  # move tar to /tmp (and shut up)
      fi
    fi
    shift                                         # next argument
  done

  if git rev-parse --is-inside-work-tree > /dev/null 2>&1 ; then
      git rm $ARGS 2> /dev/null || $(which rm) -iv $ARGS
  else
      $(which rm) -iv $ARGS
  fi
}


# Python
# --------------------------------------------------------------------
alias py="python"


# Typos
# --------------------------------------------------------------------
alias suod='sudo'
alias sduo='sudo'
alias vm='mv'
alias sl='ls'
alias got='git'
alias grp='grep'


# Vim
# --------------------------------------------------------------------
alias v="vim"
alias va="vim -o" # multiple files in splits
alias vd="vim -d" # diff


# Virtualenv
# --------------------------------------------------------------------
venv() {
  if [ ! -d "venv" ] ; then
    virtualenv venv
  fi
  source venv/bin/activate
}


# fzf & search
# --------------------------------------------------------------------

# open all files containing query
vg() {
  if [ ! $# -eq 0 ] ; then
    vim -o $(ag -l "$@")
  fi
}

# search and open file
vs() {
  if [ $# -eq 0 ] ; then
    FILENAME=$(fzf -1 -m -i)
  else
    FILENAME=$(fzf -1 -m -i -q $@)
  fi
  if [ -n "$FILENAME" ] ; then
    vim -o $FILENAME
  fi
}


# SSH keygen
# --------------------------------------------------------------------
keygen() {
  ssh-keygen -t rsa -b 4096 -C "$@"
  eval "$(ssh-agent -s)"
  ssh-add ~/.ssh/id_rsa
}
